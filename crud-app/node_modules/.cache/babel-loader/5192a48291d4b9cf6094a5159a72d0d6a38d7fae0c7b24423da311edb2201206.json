{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedshanil/Desktop/innovature-frontend/task2/frontend/crud-app/src/components/ActionDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport AddEmployee from './AddEmployee';\nimport UpdateEmployee from './UpdateEmployee';\nimport './ActionDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionDropdown = ({\n  onAddEmployee,\n  onUpdateEmployee\n}) => {\n  _s();\n  const [action, setAction] = useState('add');\n  const handleSelect = value => {\n    setAction(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"action-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Action\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu.Root, {\n      children: [/*#__PURE__*/_jsxDEV(DropdownMenu.Trigger, {\n        className: \"dropdown-trigger\",\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu.Content, {\n        className: \"dropdown-content\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownMenu.Item, {\n          onSelect: () => handleSelect('add'),\n          children: \"Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenu.Item, {\n          onSelect: () => handleSelect('update'),\n          children: \"Update Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), action === 'add' && /*#__PURE__*/_jsxDEV(AddEmployee, {\n      onAddEmployee: onAddEmployee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 28\n    }, this), action === 'update' && /*#__PURE__*/_jsxDEV(UpdateEmployee, {\n      onUpdateEmployee: onUpdateEmployee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionDropdown, \"VTGoITvEypChxE3TXTX503vezIA=\");\n_c = ActionDropdown;\nexport default ActionDropdown;\nvar _c;\n$RefreshReg$(_c, \"ActionDropdown\");","map":{"version":3,"names":["React","useState","DropdownMenu","AddEmployee","UpdateEmployee","jsxDEV","_jsxDEV","ActionDropdown","onAddEmployee","onUpdateEmployee","_s","action","setAction","handleSelect","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Root","Trigger","Content","Item","onSelect","_c","$RefreshReg$"],"sources":["/Users/mohamedshanil/Desktop/innovature-frontend/task2/frontend/crud-app/src/components/ActionDropdown.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport AddEmployee from './AddEmployee';\nimport UpdateEmployee from './UpdateEmployee';\nimport './ActionDropdown'\n\nconst ActionDropdown = ({ onAddEmployee, onUpdateEmployee }) => {\n  const [action, setAction] = useState('add');\n\n  const handleSelect = (value) => {\n    setAction(value);\n  };\n\n  return (\n    <div className=\"action-container\">\n      <h2>Select Action</h2>\n      <DropdownMenu.Root>\n        <DropdownMenu.Trigger className=\"dropdown-trigger\">Actions</DropdownMenu.Trigger>\n        <DropdownMenu.Content className=\"dropdown-content\">\n          <DropdownMenu.Item onSelect={() => handleSelect('add')}>Add Employee</DropdownMenu.Item>\n          <DropdownMenu.Item onSelect={() => handleSelect('update')}>Update Employee</DropdownMenu.Item>\n        </DropdownMenu.Content>\n      </DropdownMenu.Root>\n      {action === 'add' && <AddEmployee onAddEmployee={onAddEmployee} />}\n      {action === 'update' && <UpdateEmployee onUpdateEmployee={onUpdateEmployee} />}\n    </div>\n  );\n};\n\nexport default ActionDropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,YAAY,MAAM,+BAA+B;AAC7D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,cAAc,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC9BF,SAAS,CAACE,KAAK,CAAC;EAClB,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BV,OAAA;MAAAU,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBd,OAAA,CAACJ,YAAY,CAACmB,IAAI;MAAAL,QAAA,gBAChBV,OAAA,CAACJ,YAAY,CAACoB,OAAO;QAACP,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAAC,eACjFd,OAAA,CAACJ,YAAY,CAACqB,OAAO;QAACR,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAChDV,OAAA,CAACJ,YAAY,CAACsB,IAAI;UAACC,QAAQ,EAAEA,CAAA,KAAMZ,YAAY,CAAC,KAAK,CAAE;UAAAG,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eACxFd,OAAA,CAACJ,YAAY,CAACsB,IAAI;UAACC,QAAQ,EAAEA,CAAA,KAAMZ,YAAY,CAAC,QAAQ,CAAE;UAAAG,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACnBT,MAAM,KAAK,KAAK,iBAAIL,OAAA,CAACH,WAAW;MAACK,aAAa,EAAEA;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjET,MAAM,KAAK,QAAQ,iBAAIL,OAAA,CAACF,cAAc;MAACK,gBAAgB,EAAEA;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV,CAAC;AAACV,EAAA,CArBIH,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}